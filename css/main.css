html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline; }

html {
  line-height: 1; }

ol, ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle; }

q, blockquote {
  quotes: none; }
  q:before, q:after, blockquote:before, blockquote:after {
    content: "";
    content: none; }

a img {
  border: none; }

elements-of-type(html5-block) {
  display: block; }

body {
  font: normal 15px/1.2 Tahoma, sans-serif;
  background-color: #fff;
  min-width: 320px; }

.container {
  max-width: 960px;
  margin-left: auto;
  margin-right: auto;
  background-image: -owg(compact(linear-gradient(to right, red, #ff4d4d 40%, transparent 40%), false, false, false, false, false, false, false, false, false));
  background-image: -webkit(compact(linear-gradient(to right, red, #ff4d4d 40%, transparent 40%), false, false, false, false, false, false, false, false, false));
  background-image: -moz(compact(linear-gradient(to right, red, #ff4d4d 40%, transparent 40%), false, false, false, false, false, false, false, false, false));
  background-image: -o(compact(linear-gradient(to right, red, #ff4d4d 40%, transparent 40%), false, false, false, false, false, false, false, false, false));
  background-image: compact(linear-gradient(to right, red, #ff4d4d 40%, transparent 40%), false, false, false, false, false, false, false, false, false);
  background-size: 8.77193%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top; }
  .container:after {
    content: "";
    display: table;
    clear: both; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }
  @media (min-width: 641px) and (max-width: 1023px) {
    .container {
      padding: 0 35px; } }
  @media (min-width: 0) and (max-width: 640px) {
    .container {
      padding: 0 20px; } }

.page-wrap {
  min-height: 100vh;
  margin-bottom: -73px;
  font-family: "RobotoRegular", sans-serif;
  font-size: 16px; }

h1 {
  font: bold 20px Tahoma, sans-serif; }

a {
  text-decoration: underline;
  outline: none;
  transition: color .2s ease-in-out;
  -moz-transition: color .2s ease-in-out;
  -webkit-transition: color .2s ease-in-out; }

*, *:after, *:before {
  box-sizing: border-box; }

img {
  display: block;
  height: auto; }

.clearfix:after {
  content: " ";
  /* Older browser do not support empty content */
  visibility: hidden;
  display: block;
  height: 0;
  clear: both; }

header, section, footer, aside, article {
  display: block; }

html::selection, body::selection, div::selection, span::selection, applet::selection, object::selection, iframe::selection,
h1::selection, h2::selection, h3::selection, h4::selection, h5::selection, h6::selection, p::selection, blockquote::selection, pre::selection,
a::selection, abbr::selection, acronym::selection, address::selection, big::selection, cite::selection, code::selection,
del::selection, dfn::selection, em::selection, img::selection, ins::selection, kbd::selection, q::selection, s::selection, samp::selection,
small::selection, strike::selection, strong::selection, sub::selection, sup::selection, tt::selection, var::selection,
b::selection, u::selection, i::selection, center::selection,
dl::selection, dt::selection, dd::selection, ol::selection, ul::selection, li::selection,
fieldset::selection, form::selection, label::selection, legend::selection,
table::selection, caption::selection, tbody::selection, tfoot::selection, thead::selection, tr::selection, th::selection, td::selection,
article::selection, aside::selection, canvas::selection, details::selection, embed::selection,
figure::selection, figcaption::selection, footer::selection, header::selection, hgroup::selection,
menu::selection, nav::selection, output::selection, ruby::selection, section::selection, summary::selection,
time::selection, mark::selection, audio::selection, video::selection {
  background: #616D84;
  /* WebKit/Blink Browsers */
  color: #fff; }

html::-moz-selection, body::-moz-selection, div::-moz-selection, span::-moz-selection, applet::-moz-selection, object::-moz-selection, iframe::-moz-selection,
h1::-moz-selection, h2::-moz-selection, h3::-moz-selection, h4::-moz-selection, h5::-moz-selection, h6::-moz-selection, p::-moz-selection, blockquote::-moz-selection, pre::-moz-selection,
a::-moz-selection, abbr::-moz-selection, acronym::-moz-selection, address::-moz-selection, big::-moz-selection, cite::-moz-selection, code::-moz-selection,
del::-moz-selection, dfn::-moz-selection, em::-moz-selection, img::-moz-selection, ins::-moz-selection, kbd::-moz-selection, q::-moz-selection, s::-moz-selection, samp::-moz-selection,
small::-moz-selection, strike::-moz-selection, strong::-moz-selection, sub::-moz-selection, sup::-moz-selection, tt::-moz-selection, var::-moz-selection,
b::-moz-selection, u::-moz-selection, i::-moz-selection, center::-moz-selection,
dl::-moz-selection, dt::-moz-selection, dd::-moz-selection, ol::-moz-selection, ul::-moz-selection, li::-moz-selection,
fieldset::-moz-selection, form::-moz-selection, label::-moz-selection, legend::-moz-selection,
table::-moz-selection, caption::-moz-selection, tbody::-moz-selection, tfoot::-moz-selection, thead::-moz-selection, tr::-moz-selection, th::-moz-selection, td::-moz-selection,
article::-moz-selection, aside::-moz-selection, canvas::-moz-selection, details::-moz-selection, embed::-moz-selection,
figure::-moz-selection, figcaption::-moz-selection, footer::-moz-selection, header::-moz-selection, hgroup::-moz-selection,
menu::-moz-selection, nav::-moz-selection, output::-moz-selection, ruby::-moz-selection, section::-moz-selection, summary::-moz-selection,
time::-moz-selection, mark::-moz-selection, audio::-moz-selection, video::-moz-selection {
  background: #616D84;
  /* Gecko Browsers */
  color: #fff; }

h2, .title, .actors__title, .sidebar-random__tile {
  font-family: "RobotoRegular", sans-serif;
  font-size: 29px;
  color: #333333; }

a {
  font-family: Roboto, sans-serif;
  font-size: 15px;
  color: #104E98; }

textarea {
  resize: none; }

.page-wrap .flexslider {
  border: none;
  margin: 0;
  padding: 0; }
  .page-wrap .flexslider .flex-prev:before, .page-wrap .flexslider .flex-next:before {
    content: '\e90a';
    display: inline-block;
    font-family: "icomoon";
    font-size: 53px;
    vertical-align: middle;
    text-shadow: none;
    color: rgba(0, 0, 0, 0.7); }
  .page-wrap .flexslider .flex-next {
    -webkit-transform: rotate(180deg);
    -moz-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    -o-transform: rotate(180deg);
    transform: rotate(180deg); }

/* Your custom fonts here */
/* Example

@font-face {
  font-family: 'CustomFont';
  src: url('../fonts/Custom-Font.eot');
  src: url('../fonts/Custom-Font.eot?#iefix') format('embedded-opentype'),
  url('../fonts/Custom-Font.woff') format('woff'),
  url('../fonts/Custom-Font.svg#custom_font') format('svg');
  font-weight: normal;       // For normal width. It could has another value
  font-style: normal;     // Also could has another value
}

@font-face {
  font-family: 'CustomFont';
  src: url('../fonts/Custom-Font-Bold.eot');
  src: url('../fonts/Custom-Font-Bold.eot?#iefix') format('embedded-opentype'),
  url('../fonts/Custom-Font-Bold.woff') format('woff'),
  url('../fonts/Custom-Font-Bold.svg#custom_font_bold') format('svg');
  font-weight: bold;       // For bold width. It could has another value
  font-style: normal;     // Also could has another value
}

// Var for using custom font
$CustomFont: 'CustomFont', Helvetica, Arial, sans-serif;


===Use examples===

.example_normal {
  font: 10px $CustomFont;
}

.example_bold {
  font: bold 10px $CustomFont;
}

*/
/* ===============================================  Roboto  ============================================= */
@font-face {
  font-family: "RobotoRegular";
  src: url("../fonts/Roboto/RobotoRegular/RobotoRegular.eot");
  src: url("../fonts/Roboto/RobotoRegular/RobotoRegular.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto/RobotoRegular/RobotoRegular.woff") format("woff"), url("../fonts/Roboto/RobotoRegular/RobotoRegular.ttf") format("truetype"); }

/* font-family: "RobotoLight"; */
@font-face {
  font-family: "RobotoLight";
  src: url("../fonts/Roboto/RobotoLight/RobotoLight.eot");
  src: url("../fonts/Roboto/RobotoLight/RobotoLight.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto/RobotoLight/RobotoLight.woff") format("woff"), url("../fonts/Roboto/RobotoLight/RobotoLight.ttf") format("truetype"); }

/* font-family: "RobotoMedium"; */
@font-face {
  font-family: "RobotoMedium";
  src: url("../fonts/Roboto/RobotoMedium/RobotoMedium.eot");
  src: url("../fonts/Roboto/RobotoMedium/RobotoMedium.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto/RobotoMedium/RobotoMedium.woff") format("woff"), url("../fonts/Roboto/RobotoMedium/RobotoMedium.ttf") format("truetype"); }

/* font-family: "RobotoBold"; */
@font-face {
  font-family: "RobotoBold";
  src: url("../fonts/Roboto/RobotoBold/RobotoBold.eot");
  src: url("../fonts/Roboto/RobotoBold/RobotoBold.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto/RobotoBold/RobotoBold.woff") format("woff"), url("../fonts/Roboto/RobotoBold/RobotoBold.ttf") format("truetype"); }

/* =========================================   Roboto Condensed  ======================================== */
@font-face {
  font-family: "RobotoCondensedRegular";
  src: url("../fonts/Roboto/RobotoCondensed-Regular.ttf"); }

/* font-family: "RobotoCondensedLight"; */
@font-face {
  font-family: "RobotoCondensedLight";
  src: url("../fonts/Roboto/RobotoCondensedLight.ttf"); }

/* font-family: "RobotoCondensedItalic"; */
@font-face {
  font-family: "RobotoCondensedItalic";
  src: url("../fonts/Roboto/RobotoCondensedItalic.ttf"); }

/* font-family: "RobotoCondensedBold"; */
@font-face {
  font-family: "RobotoCondensedBold";
  src: url("../fonts/Roboto/RobotoCondensedBold.ttf"); }

/* =========================================   Roboto black  ======================================== */
@font-face {
  font-family: "RobotoBlack";
  src: url("../fonts/Roboto/Roboto-Black.ttf"); }

/* ===========================================   Georgia  ========================================== */
@font-face {
  font-family: "Georgia";
  src: url("../fonts/Georgia/georgia.ttf"); }

/* =======================================   Georgia  italic  ====================================== */
@font-face {
  font-family: "GeorgiaItalic";
  src: url("../fonts/Georgia/georgiai.ttf"); }

/* ============================================  icomoon  =========================================== */
@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon/icomoon.eot?pzt28h");
  src: url("../fonts/icomoon/icomoon.eot?pzt28h#iefix") format("embedded-opentype"), url("../fonts/icomoon/icomoon.ttf?pzt28h") format("truetype"), url("../fonts/icomoon/icomoon.woff?pzt28h") format("woff"), url("../fonts/icomoon/icomoon.svg?pzt28h#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-choise:before {
  content: "\e900"; }

.icon-film:before {
  content: "\e901"; }

.icon-menu:before {
  content: "\e902"; }

.icon-in:before {
  content: "\e903"; }

.icon-fb:before {
  content: "\e904"; }

.icon-tw:before {
  content: "\e905"; }

.icon-clock:before {
  content: "\e906"; }

.icon-search:before {
  content: "\e907"; }

.icon-update:before {
  content: "\e908"; }

.icon-close:before {
  content: "\e909"; }

.icon-arrow_2:before {
  content: "\e90a"; }

.icon-logo:before {
  content: "\e90b"; }

.icon-arrow:before {
  content: "\e90c"; }

@media (min-width: 1024px) {
  #menu {
    position: relative;
    z-index: 8;
    opacity: 1;
    display: inline-block;
    -webkit-animation: search-menu-open 1.4s forwards;
    -o-animation: search-menu-open 1.4s forwards;
    animation: search-menu-open 1.4s forwards; } }

.top-menu {
  position: fixed;
  z-index: 15;
  top: 0;
  left: 0;
  right: 0;
  background-color: transparent;
  -webkit-transition: all 0.3s;
  -moz-transition: all 0.3s;
  -ms-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }
  @media (min-width: 641px) and (max-width: 1023px) {
    .top-menu {
      padding: 0 35px; } }
  @media (min-width: 0) and (max-width: 640px) {
    .top-menu {
      padding: 0 20px; } }
  .top-menu .container {
    padding: 10px 0 14px;
    border-bottom: 1px solid #DDDDDD; }
  .top-menu .logo {
    width: 22.22222%;
    float: left;
    margin-right: 3.7037%; }
    @media (min-width: 641px) and (max-width: 1023px) {
      .top-menu .logo {
        width: 30%;
        float: left;
        margin-right: 5%; } }
    @media (min-width: 0) and (max-width: 640px) {
      .top-menu .logo {
        width: 82.5%;
        float: left;
        margin-right: 5%; } }
  .top-menu .menu:after {
    content: "";
    display: table;
    clear: both; }
  .top-menu .menu li {
    display: inline-block;
    margin-right: 24px; }
    .top-menu .menu li a {
      display: inline-block;
      font-family: Roboto, sans-serif;
      font-weight: bold;
      font-size: 18px;
      text-decoration: none;
      color: #FFF; }
      .top-menu .menu li a:hover {
        text-decoration: underline; }
    .top-menu .menu li:after {
      position: relative;
      top: -2px;
      content: '';
      margin-left: 24px;
      display: inline-block;
      width: 4px;
      height: 4px;
      background-color: #7e848e;
      -webkit-border-radius: 50%;
      -moz-border-radius: 50%;
      border-radius: 50%; }
  .top-menu .menu li .menu {
    position: absolute; }
    .top-menu .menu li .menu li {
      display: block; }

.top-menu-wrap {
  position: relative;
  padding-top: 23px;
  float: right; }
  .top-menu-wrap:after {
    content: "";
    display: table;
    clear: both; }

.serch-wrap {
  display: inline-block;
  float: right; }
  .serch-wrap:after {
    content: "";
    display: table;
    clear: both; }

.serch-wrap form {
  position: absolute;
  z-index: 7;
  top: 20px;
  bottom: 0;
  left: 0;
  right: 0; }
  .serch-wrap form .form-item {
    width: 0;
    float: right;
    -webkit-transition: all 1s;
    -moz-transition: all 1s;
    -ms-transition: all 1s;
    -o-transition: all 1s;
    transition: all 1s;
    -webkit-animation: search-form-close .4s forwards;
    -o-animation: search-form-close .4s forwards;
    animation: search-form-close .4s forwards; }
  .serch-wrap form input {
    display: block;
    width: 100%;
    padding: 9px 20px;
    border: none;
    background-color: transparent;
    font-family: "RobotoRegular", sans-serif;
    font-size: 16px;
    color: #e1e1e1; }
    .serch-wrap form input:focus {
      outline: none; }
    .serch-wrap form input::-webkit-input-placeholder {
      /* Chrome/Opera/Safari */
      font-family: "RobotoRegular", sans-serif;
      font-size: 16px;
      color: #e1e1e1; }
    .serch-wrap form input::-moz-placeholder {
      /* Firefox 19+ */
      font-family: "RobotoRegular", sans-serif;
      font-size: 16px;
      color: #e1e1e1; }
    .serch-wrap form input:-ms-input-placeholder {
      /* IE 10+ */
      font-family: "RobotoRegular", sans-serif;
      font-size: 16px;
      color: #e1e1e1; }
    .serch-wrap form input:-moz-placeholder {
      /* Firefox 18- */
      font-family: "RobotoRegular", sans-serif;
      font-size: 16px;
      color: #e1e1e1; }

.serch-wrap .icon-search, .serch-wrap .icon-close {
  position: relative;
  top: 3px;
  cursor: pointer;
  font-size: 18px;
  color: #FFFFFF;
  -webkit-transition: all 0.4s;
  -moz-transition: all 0.4s;
  -ms-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s; }

@keyframes search-menu-close {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@keyframes search-form-open {
  from {
    width: 0; }
  to {
    width: 100%; } }

@keyframes search-menu-open {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes search-form-close {
  from {
    width: 100%; }
  to {
    width: 0; } }

.search-open #menu {
  -webkit-animation: search-menu-close .4s forwards;
  -o-animation: search-menu-close .4s forwards;
  animation: search-menu-close .4s forwards;
  z-index: 7; }

.search-open .serch-wrap form {
  z-index: 8; }
  .search-open .serch-wrap form .form-item {
    -webkit-animation: search-form-open .4s forwards;
    -o-animation: search-form-open .4s forwards;
    animation: search-form-open .4s forwards; }

.top-menu .menu .menu__drop-item:after {
  margin-left: 21px; }

.top-menu .menu .menu__drop-item > a:after {
  position: relative;
  top: -2px;
  display: inline-block;
  margin-left: 10px;
  content: '\e900';
  font-family: "icomoon";
  font-size: 6px;
  color: #fff; }

.top-menu .menu .menu__drop-item .menu {
  top: 42px;
  left: -24px;
  display: none;
  overflow: hidden; }
  .top-menu .menu .menu__drop-item .menu li {
    margin-right: 0; }
    .top-menu .menu .menu__drop-item .menu li a {
      display: block;
      padding: 26px 32px;
      background-color: #104E98;
      font-family: "RobotoRegular", sans-serif;
      font-size: 16px;
      text-transform: lowercase;
      color: #fff; }
      .top-menu .menu .menu__drop-item .menu li a:hover {
        background-color: #222222;
        text-decoration: none; }
        @media (min-width: 1024px) {
          .top-menu .menu .menu__drop-item .menu li a:hover {
            -webkit-transition: background-color 0.3s;
            -moz-transition: background-color 0.3s;
            -ms-transition: background-color 0.3s;
            -o-transition: background-color 0.3s;
            transition: background-color 0.3s; } }
    .top-menu .menu .menu__drop-item .menu li:after {
      display: none; }

.icon {
  position: relative;
  z-index: 10;
  text-decoration: none; }
  @media (min-width: 0) and (max-width: 1023px) {
    .icon:before {
      content: '\e902';
      font-family: 'icomoon'; } }

.mm-opened {
  background-color: #104E98;
  color: #fff; }
  .mm-opened li:after {
    display: none !important; }
  .mm-opened .mm-next:before {
    border: none; }
  .mm-opened .mm-next:after {
    border-color: #ffffff !important; }
  .mm-opened .mm-counter {
    color: #fff !important; }

@media (min-width: 0) and (max-width: 1023px) {
  #menu {
    width: 66% !important; } }

.mm-panel {
  padding: 19px 20px 33px 44px !important; }

.scroll-menu_blue {
  background-color: #104E98;
  -webkit-transition: all 0.3s;
  -moz-transition: all 0.3s;
  -ms-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }
  .scroll-menu_blue .container {
    border-bottom: none; }
  .scroll-menu_blue .logo {
    -webkit-transition: all 0.3s;
    -moz-transition: all 0.3s;
    -ms-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s; }
    .scroll-menu_blue .logo:before {
      color: rgba(225, 225, 225, 0.46);
      -webkit-transition: all 0.3s;
      -moz-transition: all 0.3s;
      -ms-transition: all 0.3s;
      -o-transition: all 0.3s;
      transition: all 0.3s; }
  .scroll-menu_blue form input {
    color: #e1e1e1; }
    .scroll-menu_blue form input::-webkit-input-placeholder {
      /* Chrome/Opera/Safari */
      color: rgba(225, 225, 225, 0.45); }
    .scroll-menu_blue form input::-moz-placeholder {
      /* Firefox 19+ */
      color: rgba(225, 225, 225, 0.45); }
    .scroll-menu_blue form input:-ms-input-placeholder {
      /* IE 10+ */
      color: rgba(225, 225, 225, 0.45); }
    .scroll-menu_blue form input:-moz-placeholder {
      /* Firefox 18- */
      color: rgba(225, 225, 225, 0.45); }

@keyframes close {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

.mm-slideout:before {
  position: absolute;
  z-index: 10;
  top: 30px;
  right: calc(66% + 20px);
  display: block;
  opacity: 0;
  content: '\e909';
  font-family: 'icomoon';
  font-size: 16px;
  color: #fff; }

.mm-opening .mm-menu.mm-opened[class*=mm-pagedim] ~ #mm-blocker {
  opacity: .82 !important; }

.mm-opening .mm-slideout:before {
  -webkit-animation: close forwards;
  -o-animation: close forwards;
  animation: close forwards;
  animation-delay: .35s; }

.mm-navbar {
  border: none; }
  .mm-navbar .mm-title {
    font-size: 0; }

.mm-menu .mm-btn:before {
  border-color: #fff !important; }

.page-buffer {
  content: '';
  display: block;
  width: 100%;
  min-height: 73px; }

.footer {
  min-height: 73px;
  padding-top: 17px;
  padding-bottom: 16px;
  background-color: #e4e4e4;
  font-family: "RobotoRegular", sans-serif;
  font-size: 14px;
  color: #858585; }
  @media (min-width: 0) and (max-width: 640px) {
    .footer {
      padding: 26px 0 20px; } }
  .footer .container {
    display: flex;
    flex-wrap: wrap;
    align-items: center; }
  .footer__content {
    width: 49.01961%;
    float: left;
    margin-right: 1.96078%;
    display: inline-block;
    vertical-align: middle;
    font-family: "RobotoRegular", sans-serif;
    font-size: 14px;
    text-transform: uppercase;
    color: #858585; }
    @media (min-width: 0) and (max-width: 640px) {
      .footer__content {
        width: 100%;
        margin-bottom: 11px;
        text-align: center; } }
  .footer__social-links {
    width: 49.01961%;
    float: right;
    margin-right: 0;
    display: inline-block;
    vertical-align: middle;
    text-align: right;
    font-size: 0; }
    @media (min-width: 0) and (max-width: 640px) {
      .footer__social-links {
        width: 100%;
        text-align: center; } }
    .footer__social-links-item {
      display: inline-block;
      margin-right: 14px; }
    .footer__social-links .footer__link, .footer__social-links a {
      position: relative;
      display: inline-block;
      width: 40px;
      height: 40px;
      overflow: hidden;
      line-height: 40px;
      font-size: 0;
      text-align: center;
      text-decoration: none;
      vertical-align: middle;
      color: #ffffff;
      -webkit-border-radius: 50%;
      -moz-border-radius: 50%;
      border-radius: 50%; }
      .footer__social-links .footer__link:before, .footer__social-links a:before {
        font-size: 18px; }
      .footer__social-links .footer__link:after, .footer__social-links a:after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: rgba(0, 0, 0, 0.4);
        opacity: 0;
        -webkit-transition: opacity 0.3s;
        -moz-transition: opacity 0.3s;
        -ms-transition: opacity 0.3s;
        -o-transition: opacity 0.3s;
        transition: opacity 0.3s; }
      .footer__social-links .footer__link:hover, .footer__social-links a:hover {
        text-decoration: none; }
        .footer__social-links .footer__link:hover:after, .footer__social-links a:hover:after {
          opacity: 1; }
    .footer__social-links .icon-tw {
      background-color: #219FE9; }
      .footer__social-links .icon-tw:before {
        font-size: 17px; }
    .footer__social-links .icon-fb {
      background-color: #35589A; }
    .footer__social-links .icon-in {
      background-color: #E2306C; }
  .footer__link, .footer footer__content a {
    font-family: "RobotoRegular", sans-serif;
    font-size: 14px;
    text-decoration: none;
    color: #858585; }
    .footer__link:hover, .footer footer__content a:hover {
      text-decoration: underline; }

.example_class li {
  display: inline-block; }

.header-slider {
  position: relative;
  overflow: hidden; }
  @media (min-width: 1024px) {
    .header-slider:before, .header-slider:after {
      position: absolute;
      z-index: 8;
      top: 0;
      bottom: 0;
      content: '';
      display: block;
      width: 178px; } }
  .header-slider:before {
    left: 0;
    background: linear-gradient(to right, rgba(0, 0, 0, 0.4), transparent); }
    @media (min-width: 0) and (max-width: 1023px) {
      .header-slider:before {
        position: absolute;
        z-index: 6;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        content: '';
        display: block;
        background: linear-gradient(to right, black, rgba(0, 0, 0, 0.3)); } }
  .header-slider:after {
    right: 0;
    background: linear-gradient(to left, rgba(0, 0, 0, 0.4), transparent); }
    @media (min-width: 0) and (max-width: 1023px) {
      .header-slider:after {
        display: none; } }
  .header-slider .slide-item {
    width: 100%;
    height: 100%;
    padding-top: 187px;
    background-position: center center !important;
    background-repeat: no-repeat !important;
    -webkit-background-size: cover !important;
    background-size: cover !important;
    min-height: 666px; }
    @media (min-width: 641px) and (max-width: 1023px) {
      .header-slider .slide-item {
        background-position: center center !important;
        padding-top: 173px; } }
    @media (min-width: 0) and (max-width: 640px) {
      .header-slider .slide-item {
        background-position: calc(50% - 265px) center !important;
        padding-top: 115px;
        padding-bottom: 120px; } }
  .header-slider .flex-prev, .header-slider .flex-next {
    z-index: 10;
    top: calc(50% - 112.5px);
    display: inline-block;
    background-color: rgba(225, 225, 225, 0.1);
    opacity: 1;
    width: 225px;
    height: 225px;
    font-size: 0;
    line-height: 255px;
    text-align: center;
    vertical-align: middle;
    -webkit-transition: all 0.3s;
    -moz-transition: all 0.3s;
    -ms-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%; }
    .header-slider .flex-prev:hover, .header-slider .flex-next:hover {
      background-color: rgba(225, 225, 225, 0.9); }
  .header-slider .flex-prev {
    left: -112px; }
    .header-slider .flex-prev:before {
      position: absolute;
      top: 0;
      bottom: 0;
      right: 64px;
      line-height: 225px; }
  .header-slider .flex-next {
    right: -112px; }
    .header-slider .flex-next:before {
      position: absolute;
      top: 0;
      bottom: 0;
      right: 64px;
      line-height: 225px; }
  @media (min-width: 0) and (max-width: 1023px) {
    .header-slider .flex-direction-nav {
      display: none; } }
  .header-slider .flexslider:hover .flex-direction-nav .flex-prev {
    left: -112px; }
  .header-slider .flexslider:hover .flex-direction-nav .flex-next {
    right: -112px; }
  .header-slider .flex-control-nav {
    z-index: 11;
    bottom: 35px;
    right: 32px;
    display: block;
    width: auto; }
    @media (min-width: 601px) and (max-width: 1100px) {
      .header-slider .flex-control-nav {
        bottom: 73px;
        right: 35px; } }
    @media (min-width: 0) and (max-width: 640px) {
      .header-slider .flex-control-nav {
        bottom: 153px;
        right: 20px; } }
    .header-slider .flex-control-nav li {
      display: block;
      margin-left: 0;
      margin-right: 0; }
      .header-slider .flex-control-nav li:not(:last-of-type) {
        margin-bottom: 22px; }
    .header-slider .flex-control-nav a {
      width: 13px;
      height: 13px;
      background-color: transparent;
      border: 1px solid #BBBBBB;
      -webkit-box-shadow: none;
      -moz-box-shadow: none;
      box-shadow: none;
      -webkit-transition: all 0.3s;
      -moz-transition: all 0.3s;
      -ms-transition: all 0.3s;
      -o-transition: all 0.3s;
      transition: all 0.3s; }
      .header-slider .flex-control-nav a:not(.flex-active):hover {
        background-color: #104E98;
        border: 1px solid #104E98; }
    .header-slider .flex-control-nav .flex-active {
      background-color: #B8B8B8; }

.header-slider__flexslider:before {
  position: absolute;
  z-index: 8;
  top: 0;
  left: 0;
  right: 0;
  display: block;
  content: '';
  height: 152px;
  background: linear-gradient(to bottom, rgba(0, 0, 0, 0.6), transparent); }

.slide-item__content {
  position: relative;
  z-index: 7; }
  @media (min-width: 1024px) {
    .slide-item__content {
      width: 35.18519%;
      float: left;
      margin-right: 3.7037%;
      margin-right: 64.81481%; } }
  @media (min-width: 801px) and (max-width: 1023px) {
    .slide-item__content {
      width: 47.5%;
      float: left;
      margin-right: 5%;
      margin-right: 52.5%; } }
  @media (min-width: 641px) and (max-width: 800px) {
    .slide-item__content {
      width: 65%;
      float: left;
      margin-right: 5%;
      margin-right: 35%; } }
  @media (min-width: 0) and (max-width: 640px) {
    .slide-item__content {
      width: 94%;
      margin-right: 6%; } }

.slide-item__title, .slide-item__title a {
  position: relative;
  z-index: 7;
  max-width: 495px;
  margin-bottom: 18px;
  font-family: "RobotoRegular", sans-serif;
  font-size: 55px;
  text-decoration: none;
  color: #104E98;
  -webkit-transition: all 0.3s;
  -moz-transition: all 0.3s;
  -ms-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }
  @media (min-width: 0) and (max-width: 640px) {
    .slide-item__title, .slide-item__title a {
      font-size: 49px; } }

.slide-item__title a:hover, a.slide-item__title:hover, .slide-item__title a:hover {
  opacity: .7; }

.slide-item__vocab {
  margin-bottom: 30px;
  font-size: 0; }
  .slide-item__vocab a {
    display: inline-block;
    margin-right: 8px;
    margin-bottom: 8px;
    padding: 6px 15px;
    border: 1px solid #444444;
    font-family: "Roboto Light", sans-serif;
    font-size: 15px;
    text-decoration: none;
    color: #878787;
    -webkit-transition: background-color 0.3s;
    -moz-transition: background-color 0.3s;
    -ms-transition: background-color 0.3s;
    -o-transition: background-color 0.3s;
    transition: background-color 0.3s;
    -webkit-border-radius: 15px;
    -moz-border-radius: 15px;
    border-radius: 15px; }
    .slide-item__vocab a:hover {
      background-color: rgba(135, 135, 135, 0.3); }

.slide-item__desc {
  margin-bottom: 30px;
  font-family: "RobotoRegular", sans-serif;
  font-size: 16px;
  line-height: 23px;
  color: #fff; }

.slide-item__wrap-links {
  font-size: 0; }
  @media (min-width: 641px) {
    .slide-item__wrap-links > * {
      display: inline-block; } }
  .slide-item__wrap-links a {
    display: inline-block; }

@media (min-width: 641px) {
  .wrap-about-film {
    margin-right: 32px; } }

a.wrap-about-film, .wrap-about-film a {
  margin-bottom: 23px;
  position: relative;
  display: inline-block;
  padding: 17px 33px 15px 33px;
  background-color: #104E98;
  border: none;
  font-family: "RobotoRegular", sans-serif;
  font-size: 16px;
  text-align: center;
  text-transform: uppercase;
  cursor: pointer;
  text-decoration: none;
  color: #fff; }
  @media (min-width: 0) and (max-width: 640px) {
    a.wrap-about-film, .wrap-about-film a {
      width: 100%;
      padding: 17px 15px 15px; } }
  a.wrap-about-film:before, .wrap-about-film a:before {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    content: '';
    background-color: transparent;
    -webkit-transition: background-color 0.3s;
    -moz-transition: background-color 0.3s;
    -ms-transition: background-color 0.3s;
    -o-transition: background-color 0.3s;
    transition: background-color 0.3s; }
  a.wrap-about-film:hover:before, .wrap-about-film a:hover:before {
    background-color: rgba(0, 0, 0, 0.2); }
  @media (min-width: 0) and (max-width: 640px) {
    a.wrap-about-film, .wrap-about-film a {
      width: auto; } }

a.wrap-watch-film, .wrap-watch-film a {
  margin-bottom: 23px;
  font-family: s "RobotoRegular", sans-serif;
  font-size: 15px;
  text-decoration: none;
  text-transform: uppercase;
  color: #104E98; }
  a.wrap-watch-film:hover, .wrap-watch-film a:hover {
    text-decoration: underline; }

.light.slide-item__desc, .light .slide-item__desc {
  color: #333333; }
  @media (min-width: 0) and (max-width: 1023px) {
    .light.slide-item__desc, .light .slide-item__desc {
      color: #fff; } }

.films {
  padding: 90px 0;
  background: url("../images/assets/photography.png") left top repeat; }
  @media (min-width: 0) and (max-width: 640px) {
    .films {
      padding: 250px 0 45px 0; } }
  .films .container {
    position: relative; }

.films__list:after {
  content: "";
  display: table;
  clear: both; }

.films__list-item {
  margin-bottom: 30px; }
  @media (min-width: 1024px) {
    .films__list-item {
      width: 22.22222%;
      float: left;
      margin-right: 3.7037%; }
      .films__list-item:after {
        content: "";
        display: table;
        clear: both; }
      .films__list-item:nth-of-type(4n) {
        width: 22.22222%;
        float: right;
        margin-right: 0; }
        .films__list-item:nth-of-type(4n):after {
          content: "";
          display: table;
          clear: both; }
      .films__list-item:nth-of-type(4n+1) {
        clear: both; } }
  @media (min-width: 641px) and (max-width: 1023px) {
    .films__list-item {
      width: 30%;
      float: left;
      margin-right: 5%; }
      .films__list-item:after {
        content: "";
        display: table;
        clear: both; }
      .films__list-item:nth-of-type(3n) {
        width: 30%;
        float: right;
        margin-right: 0; }
        .films__list-item:nth-of-type(3n):after {
          content: "";
          display: table;
          clear: both; }
      .films__list-item:nth-of-type(3n+1) {
        clear: both; } }
  @media (min-width: 0) and (max-width: 640px) {
    .films__list-item {
      width: 47.5%;
      float: left;
      margin-right: 5%; }
      .films__list-item:after {
        content: "";
        display: table;
        clear: both; }
      .films__list-item:nth-of-type(2n) {
        width: 47.5%;
        float: right;
        margin-right: 0; }
        .films__list-item:nth-of-type(2n):after {
          content: "";
          display: table;
          clear: both; }
      .films__list-item:nth-of-type(2n+1) {
        clear: both; } }
  .films__list-item * {
    text-decoration: none; }

.films__list-item-title {
  margin-top: 17px;
  margin-bottom: 9px; }
  .films__list-item-title a {
    font-family: Roboto, sans-serif;
    font-weight: bold;
    font-size: 15px;
    text-decoration: none;
    color: #444444; }
    .films__list-item-title a:hover {
      text-decoration: underline;
      color: #104E98; }

.films__list-item-vocab {
  font-family: "RobotoRegular", sans-serif;
  font-size: 14px;
  line-height: 20px;
  color: #999999; }
  .films__list-item-vocab a {
    font-family: "RobotoRegular", sans-serif;
    font-size: 14px;
    text-decoration: none;
    color: #999999; }
    .films__list-item-vocab a:hover {
      text-decoration: underline;
      color: #104E98; }

.films__img-wrap img {
  width: 100%;
  height: auto; }

.films__img-wrap a {
  position: relative;
  z-index: 6;
  display: block; }
  .films__img-wrap a:before {
    position: absolute;
    z-index: 7;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    content: '';
    background-color: rgba(0, 0, 0, 0.4);
    opacity: 0;
    -webkit-transition: opacity 0.6s;
    -moz-transition: opacity 0.6s;
    -ms-transition: opacity 0.6s;
    -o-transition: opacity 0.6s;
    transition: opacity 0.6s; }
  .films__img-wrap a:after {
    position: absolute;
    z-index: 8;
    top: calc(50% - 28px);
    left: calc(50% - 28px);
    content: '\e90b';
    font-family: 'icomoon';
    font-size: 56px;
    width: 56px;
    height: 56px;
    line-height: 56px;
    color: rgba(225, 225, 225, 0.9);
    opacity: 0;
    -webkit-transition: opacity 0.6s;
    -moz-transition: opacity 0.6s;
    -ms-transition: opacity 0.6s;
    -o-transition: opacity 0.6s;
    transition: opacity 0.6s; }
  .films__img-wrap a:hover:before, .films__img-wrap a:hover:after {
    opacity: 1; }

.pager-load-more {
  margin-top: 10px;
  text-align: center; }
  .pager-load-more a {
    position: relative;
    display: inline-block;
    padding: 17px 33px 15px 33px;
    background-color: #104E98;
    border: none;
    font-family: "RobotoRegular", sans-serif;
    font-size: 16px;
    text-align: center;
    text-transform: uppercase;
    cursor: pointer;
    text-decoration: none;
    color: #fff; }
    @media (min-width: 0) and (max-width: 640px) {
      .pager-load-more a {
        width: 100%;
        padding: 17px 15px 15px; } }
    .pager-load-more a:before {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      content: '';
      background-color: transparent;
      -webkit-transition: background-color 0.3s;
      -moz-transition: background-color 0.3s;
      -ms-transition: background-color 0.3s;
      -o-transition: background-color 0.3s;
      transition: background-color 0.3s; }
    .pager-load-more a:hover:before {
      background-color: rgba(0, 0, 0, 0.2); }

.films__form-filter-wrap {
  position: absolute;
  z-index: 13;
  left: 0;
  right: 0;
  top: -133px; }
  @media (min-width: 641px) and (max-width: 1023px) {
    .films__form-filter-wrap {
      left: 35px;
      right: 35px; } }
  @media (min-width: 0) and (max-width: 640px) {
    .films__form-filter-wrap {
      top: -350px;
      left: 20px;
      right: 20px; } }
  .films__form-filter-wrap form {
    position: relative;
    z-index: 7;
    display: block;
    width: 100%;
    background-color: #ffffff;
    -webkit-box-shadow: 4px 4px 25px rgba(0, 0, 0, 0.18);
    -moz-box-shadow: 4px 4px 25px rgba(0, 0, 0, 0.18);
    box-shadow: 4px 4px 25px rgba(0, 0, 0, 0.18); }
    .films__form-filter-wrap form:after {
      content: "";
      display: table;
      clear: both; }
  .films__form-filter-wrap .form-item {
    position: relative;
    display: block;
    float: left;
    background: transparent; }
    @media (min-width: 641px) {
      .films__form-filter-wrap .form-item {
        border-right: 1px solid #DADADC; } }
    @media (min-width: 0) and (max-width: 640px) {
      .films__form-filter-wrap .form-item:not(:nth-of-type(3)) {
        border-bottom: 1px solid #DADADC; } }
    .films__form-filter-wrap .form-item:before {
      position: absolute;
      z-index: -1;
      top: calc(50% - 4px);
      right: 17px;
      content: '\e900';
      font-family: "icomoon";
      font-size: 8px;
      color: #999999; }
    .films__form-filter-wrap .form-item:first-child {
      width: 39%; }
      @media (min-width: 641px) and (max-width: 720px) {
        .films__form-filter-wrap .form-item:first-child {
          width: 33%; } }
      @media (min-width: 0) and (max-width: 640px) {
        .films__form-filter-wrap .form-item:first-child {
          width: 100%; } }
      @media (min-width: 641px) {
        .films__form-filter-wrap .form-item:first-child:after {
          position: absolute;
          z-index: -1;
          display: block;
          width: 32px;
          height: 32px;
          top: calc(50% - 16px);
          left: 23px;
          content: '\e901';
          font-family: 'icomoon';
          font-size: 31px;
          color: #333; } }
      @media (min-width: 641px) {
        .films__form-filter-wrap .form-item:first-child label {
          left: 71px; } }
      @media (min-width: 641px) {
        .films__form-filter-wrap .form-item:first-child select, .films__form-filter-wrap .form-item:first-child input {
          padding: 44px 22px 19px 71px; } }
    .films__form-filter-wrap .form-item:nth-child(2) {
      width: 22.3%; }
      @media (min-width: 0) and (max-width: 640px) {
        .films__form-filter-wrap .form-item:nth-child(2) {
          width: 100%; } }
    .films__form-filter-wrap .form-item:nth-child(3) {
      width: 30.7%; }
      @media (min-width: 641px) and (max-width: 720px) {
        .films__form-filter-wrap .form-item:nth-child(3) {
          width: 34.7%; } }
      @media (min-width: 0) and (max-width: 640px) {
        .films__form-filter-wrap .form-item:nth-child(3) {
          width: 100%; } }
    .films__form-filter-wrap .form-item label {
      position: absolute;
      z-index: -1;
      top: 25px;
      left: 23px;
      display: block;
      font-family: "RobotoRegular", sans-serif;
      font-size: 14px;
      color: #AAAAAA; }
    .films__form-filter-wrap .form-item select, .films__form-filter-wrap .form-item input {
      display: block;
      width: 100%;
      padding: 44px 22px 19px;
      border: none;
      background: transparent;
      font-family: Roboto, sans-serif;
      font-size: 17px;
      font-weight: bold;
      cursor: pointer;
      color: #444444;
      -webkit-appearance: none;
      -moz-appearance: none; }
      @media (min-width: 0) and (max-width: 640px) {
        .films__form-filter-wrap .form-item select, .films__form-filter-wrap .form-item input {
          padding: 42px 22px 17px; } }
  .films__form-filter-wrap .form-action {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    width: 8%;
    float: left;
    background: #104E98; }
    .films__form-filter-wrap .form-action:after {
      content: "";
      display: table;
      clear: both; }
    @media (min-width: 641px) and (max-width: 720px) {
      .films__form-filter-wrap .form-action {
        width: 10%; } }
    @media (min-width: 0) and (max-width: 640px) {
      .films__form-filter-wrap .form-action {
        position: relative;
        width: 100%;
        height: 69px; } }
    .films__form-filter-wrap .form-action:before {
      position: absolute;
      z-index: 6;
      top: calc(50% - 11.5px);
      left: calc(50% - 11.5px);
      content: '\e907';
      font-family: 'icomoon';
      font-size: 23px;
      color: #fff; }
    .films__form-filter-wrap .form-action input[type="submit"] {
      position: absolute;
      z-index: 8;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      display: block;
      width: 100%;
      height: 100%;
      border: none;
      background-color: transparent;
      cursor: pointer;
      font-size: 0;
      -webkit-transition: background-color 0.3s;
      -moz-transition: background-color 0.3s;
      -ms-transition: background-color 0.3s;
      -o-transition: background-color 0.3s;
      transition: background-color 0.3s; }
      .films__form-filter-wrap .form-action input[type="submit"]:hover {
        background-color: rgba(0, 0, 0, 0.2); }

.contact-form {
  padding: 38px 0 50px;
  -webkit-background-size: cover !important;
  background-size: cover !important;
  background-repeat: no-repeat !important;
  background-position: center center !important; }
  .contact-form.container, .contact-form .container {
    position: relative; }
  .contact-form .form-action:before {
    position: absolute;
    z-index: 8;
    top: calc(32%);
    left: calc(50% + 83px);
    content: '\e90c';
    font-family: 'icomoon';
    font-size: 19px;
    color: #fff; }
  .contact-form .form-action:hover:before {
    background-color: rgba(0, 0, 0, 0.2); }
  .contact-form .form-action input[type="submit"]:hover .form-action:before {
    width: 102%;
    height: 108%;
    opacity: 1; }

@media (min-width: 0) and (max-width: 1023px) {
  .contact-form__glasses-wrap {
    display: none; } }

.contact-form__glasses-wrap img {
  position: absolute;
  right: -127px;
  bottom: -216px;
  display: block;
  -webkit-transition: all 0.3s;
  -moz-transition: all 0.3s;
  -ms-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }
  @media (min-width: 1024px) and (max-width: 1240px) {
    .contact-form__glasses-wrap img {
      right: -80px;
      -webkit-transform: scale(0.8);
      -moz-transform: scale(0.8);
      -ms-transform: scale(0.8);
      -o-transform: scale(0.8);
      transform: scale(0.8); } }

.contact-form__title {
  margin-bottom: 2px;
  font-family: "RobotoBlack", sans-serif;
  font-size: 49px;
  text-transform: uppercase;
  color: #fff; }
  @media (min-width: 0) and (max-width: 640px) {
    .contact-form__title {
      font-size: 30px; } }

.contact-form-wrap {
  width: 48.14815%;
  float: left;
  margin-right: 3.7037%;
  margin-right: 51.85185%; }
  @media (min-width: 641px) and (max-width: 1023px) {
    .contact-form-wrap {
      width: 65%;
      float: left;
      margin-right: 5%;
      margin-right: 35%; } }
  @media (min-width: 0) and (max-width: 640px) {
    .contact-form-wrap {
      width: 100%;
      float: left;
      margin-left: 0;
      margin-right: 0;
      margin-right: 100%; } }
  .contact-form-wrap form {
    width: 100%; }
    .contact-form-wrap form input[type="text"], .contact-form-wrap form input[type="email"], .contact-form-wrap form select, .contact-form-wrap form textarea {
      display: block;
      width: 100%;
      margin-bottom: 12px;
      padding: 8px 10px;
      font-family: "RobotoRegular", sans-serif;
      font-size: 15px;
      color: #777777; }
      .contact-form-wrap form input[type="text"]::-webkit-input-placeholder, .contact-form-wrap form input[type="email"]::-webkit-input-placeholder, .contact-form-wrap form select::-webkit-input-placeholder, .contact-form-wrap form textarea::-webkit-input-placeholder {
        /* Chrome/Opera/Safari */
        font-family: "RobotoRegular", sans-serif;
        font-size: 15px;
        color: #777777; }
      .contact-form-wrap form input[type="text"]::-moz-placeholder, .contact-form-wrap form input[type="email"]::-moz-placeholder, .contact-form-wrap form select::-moz-placeholder, .contact-form-wrap form textarea::-moz-placeholder {
        /* Firefox 19+ */
        font-family: "RobotoRegular", sans-serif;
        font-size: 15px;
        color: #777777; }
      .contact-form-wrap form input[type="text"]:-ms-input-placeholder, .contact-form-wrap form input[type="email"]:-ms-input-placeholder, .contact-form-wrap form select:-ms-input-placeholder, .contact-form-wrap form textarea:-ms-input-placeholder {
        /* IE 10+ */
        font-family: "RobotoRegular", sans-serif;
        font-size: 15px;
        color: #777777; }
      .contact-form-wrap form input[type="text"]:-moz-placeholder, .contact-form-wrap form input[type="email"]:-moz-placeholder, .contact-form-wrap form select:-moz-placeholder, .contact-form-wrap form textarea:-moz-placeholder {
        /* Firefox 18- */
        font-family: "RobotoRegular", sans-serif;
        font-size: 15px;
        color: #777777; }
    .contact-form-wrap form textarea {
      padding: 12px 10px; }
    .contact-form-wrap form input[type="submit"] {
      position: relative;
      display: inline-block;
      padding: 17px 33px 15px 33px;
      background-color: #104E98;
      border: none;
      font-family: "RobotoRegular", sans-serif;
      font-size: 16px;
      text-align: center;
      text-transform: uppercase;
      cursor: pointer;
      text-decoration: none;
      color: #fff;
      width: 100%; }
      @media (min-width: 0) and (max-width: 640px) {
        .contact-form-wrap form input[type="submit"] {
          width: 100%;
          padding: 17px 15px 15px; } }
      .contact-form-wrap form input[type="submit"]:before {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        content: '';
        background-color: transparent;
        -webkit-transition: background-color 0.3s;
        -moz-transition: background-color 0.3s;
        -ms-transition: background-color 0.3s;
        -o-transition: background-color 0.3s;
        transition: background-color 0.3s; }
      .contact-form-wrap form input[type="submit"]:hover:before {
        background-color: rgba(0, 0, 0, 0.2); }
    .contact-form-wrap form textarea {
      min-height: 100px; }
    .contact-form-wrap form .form-item, .contact-form-wrap form .form-action {
      position: relative;
      width: 100%; }

.blue {
  color: #104E98; }

.contact-form__title-desc {
  display: block;
  margin-bottom: 22px;
  font-family: "GeorgiaItalic", sans-serif;
  font-size: 27px;
  color: #AAAAAA; }
  @media (min-width: 0) and (max-width: 640px) {
    .contact-form__title-desc {
      font-size: 19px; } }

.actors {
  padding-top: 82px;
  padding-bottom: 55px;
  background-color: #f8f8f8; }

.actors__title {
  margin: 0 auto 30px auto; }

.actors-list {
  counter-reset: numbers; }
  @media (min-width: 0) and (max-width: 640px) {
    .actors-list {
      width: max-content;
      width: -moz-max-content;
      margin: 0 auto;
      text-align: center; } }

.actors-list-item {
  position: relative;
  display: inline-block;
  text-align: left; }
  .actors-list-item:after {
    content: "";
    display: table;
    clear: both; }
  @media (min-width: 1024px) {
    .actors-list-item {
      width: 31.1828%;
      float: left;
      margin-right: 3.22581%; }
      .actors-list-item:nth-child(3n) {
        width: 31.1828%;
        float: right;
        margin-right: 0; }
      .actors-list-item:nth-child(n + 3) ~ .actors-list-item {
        display: none; } }
  @media (min-width: 641px) and (max-width: 1023px) {
    .actors-list-item {
      margin-bottom: 29px;
      width: 50%;
      float: left; }
      .actors-list-item:nth-child(2n) {
        width: 50%;
        float: left; } }
  @media (min-width: 0) and (max-width: 640px) {
    .actors-list-item {
      display: block; }
      .actors-list-item:not(:last-child) {
        margin: 0 auto 30px; } }
  .actors-list-item:before {
    position: absolute;
    z-index: 7;
    top: 103px;
    left: 8px;
    display: inline-block;
    width: 30px;
    height: 30px;
    background-color: #104E98;
    content: counter(numbers);
    counter-increment: numbers;
    font-family: Roboto, sans-serif;
    font-weight: bold;
    font-size: 18px;
    line-height: 30px;
    text-align: center;
    vertical-align: middle;
    color: #fff;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%; }

.actors-wrap-img {
  width: 133px;
  height: 133px;
  float: left; }
  .actors-wrap-img:after {
    content: "";
    display: table;
    clear: both; }
  .actors-wrap-img > a {
    position: relative;
    display: block;
    overflow: hidden;
    z-index: 5;
    width: 100%;
    height: 100%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%; }
    .actors-wrap-img > a:before {
      position: absolute;
      z-index: 7;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      content: '';
      background-color: rgba(0, 0, 0, 0.4);
      opacity: 0;
      -webkit-transition: all 1s;
      -moz-transition: all 1s;
      -ms-transition: all 1s;
      -o-transition: all 1s;
      transition: all 1s; }
    .actors-wrap-img > a:hover:before {
      opacity: 1; }
    .actors-wrap-img > a:hover img {
      -webkit-transform: scale(1.2);
      -moz-transform: scale(1.2);
      -ms-transform: scale(1.2);
      -o-transform: scale(1.2);
      transform: scale(1.2); }
  .actors-wrap-img img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border: 2px solid #F7F7F7;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%;
    -webkit-transition: all 1s;
    -moz-transition: all 1s;
    -ms-transition: all 1s;
    -o-transition: all 1s;
    transition: all 1s; }

.actors__films {
  font-family: "RobotoRegular", sans-serif;
  font-size: 15px;
  color: #333333; }
  .actors__films:after {
    content: "";
    display: table;
    clear: both; }
  .actors__films a {
    font-family: "RobotoRegular", sans-serif;
    font-size: 15px;
    color: #104E98;
    text-decoration: none; }
    .actors__films a:hover {
      text-decoration: underline; }
  .actors__films span {
    display: inline-block; }

.actors__film {
  margin-bottom: 5px; }

.actors-wrap-info {
  min-width: 104px;
  margin-left: 153px;
  max-width: 145px; }
  .actors-wrap-info:after {
    content: "";
    display: table;
    clear: both; }

.actors__name {
  margin-bottom: 11px;
  font-family: Roboto, sans-serif;
  font-weight: bold;
  font-size: 18px;
  color: #333333;
  -webkit-transition: color 0.3s;
  -moz-transition: color 0.3s;
  -ms-transition: color 0.3s;
  -o-transition: color 0.3s;
  transition: color 0.3s; }
  .actors__name a {
    font-family: Roboto, sans-serif;
    font-weight: bold;
    font-size: 18px;
    color: #333333;
    text-decoration: none; }
    .actors__name a:hover {
      text-decoration: underline;
      color: #104E98; }

:-moz-placeholder {
  /* Firefox 18- */
  font-family: "RobotoRegular", sans-serif;
  font-size: 15px;
  color: #777777; }

.films-news {
  padding-bottom: 105px;
  padding-top: 43px; }
  @media (min-width: 641px) and (max-width: 1023px) {
    .films-news {
      padding-bottom: 60px; } }
  @media (min-width: 0) and (max-width: 640px) {
    .films-news {
      padding-bottom: 30px; } }

.news-content {
  width: 61.11111%;
  float: left;
  margin-right: 3.7037%; }
  @media (min-width: 0) and (max-width: 1023px) {
    .news-content {
      width: 100%;
      float: left;
      margin-left: 0;
      margin-right: 0; } }

@keyframes angle-hide {
  from {
    bottom: 0;
    right: 0; }
  to {
    bottom: -30px;
    right: -30px; } }

@keyframes angle-show {
  from {
    bottom: -30px;
    right: -30px; }
  to {
    bottom: 0;
    right: 0; } }
  .news-content__title {
    float: left;
    margin-bottom: 18px; }
    .news-content__title:after {
      content: "";
      display: table;
      clear: both; }
    @media (min-width: 0) and (max-width: 640px) {
      .news-content__title {
        width: 100%;
        text-align: center; } }
  .news-content__tabs {
    float: right;
    margin-top: 6px;
    margin-bottom: 21px; }
    .news-content__tabs:after {
      content: "";
      display: table;
      clear: both; }
    @media (min-width: 0) and (max-width: 640px) {
      .news-content__tabs {
        width: 100%;
        text-align: center; } }
    .news-content__tabs .form-item, .news-content__tabs label {
      display: inline-block; }
    .news-content__tabs .form-item {
      margin-right: 5px; }
    .news-content__tabs input {
      display: none; }
      .news-content__tabs input:checked + label {
        background-color: #104E98;
        color: #fff; }
        .news-content__tabs input:checked + label:after {
          content: '';
          position: absolute;
          bottom: -1px;
          left: calc(50% - 7px);
          display: inline-block;
          border-top: 8px solid #104E98;
          border-bottom: 8px solid transparent;
          border-left: 8px solid #104E98;
          border-right: 8px solid transparent;
          -webkit-transform: rotate(225deg);
          -moz-transform: rotate(225deg);
          -ms-transform: rotate(225deg);
          -o-transform: rotate(225deg);
          transform: rotate(225deg); }
    .news-content__tabs label {
      position: relative;
      padding: 6px 15px 3px;
      cursor: pointer;
      font-family: "RobotoRegular", sans-serif;
      font-size: 14px;
      color: rgba(16, 26, 152, 0.7);
      text-transform: uppercase; }
  .news-content-list {
    clear: both; }
    .news-content-list-item {
      position: relative;
      z-index: 7;
      display: flex;
      align-items: stretch;
      margin-bottom: 19px;
      overflow: hidden;
      background-color: #F7F7F7;
      font-size: 0; }
      .news-content-list-item:after {
        content: "";
        display: table;
        clear: both; }
      .news-content-list-item a {
        display: flex;
        flex-wrap: wrap;
        align-items: stretch;
        text-decoration: none; }
      .news-content-list-item a:after {
        position: absolute;
        bottom: 0;
        right: 0;
        z-index: -1;
        content: '';
        display: inline-block;
        width: 0;
        height: 0;
        border-top: 13px solid #DDDDDD;
        border-bottom: 13px solid #fff;
        border-left: 13px solid #DDDDDD;
        border-right: 13px solid #fff; }
      .news-content-list-item a:hover:after {
        -webkit-animation: angle-hide .3s forwards;
        -o-animation: angle-hide .3s forwards;
        animation: angle-hide .3s forwards; }
      .news-content-list-item a:hover .news__title {
        color: #104E98; }
      .news-content-list-item a:not(:hover):after {
        -webkit-animation: angle-show .1s forwards;
        -o-animation: angle-show .1s forwards;
        animation: angle-show .1s forwards; }

.news-list-item__img-wrap, .news-list-item__desc-wrap {
  display: inline-block; }

@media (min-width: 641px) {
  .news-list-item__img-wrap {
    max-width: 210px;
    width: 35.84521%;
    float: left;
    margin-right: 2.64766%; } }

@media (min-width: 0) and (max-width: 640px) {
  .news-list-item__img-wrap {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0; } }

.news-list-item__img-wrap img {
  width: 100%;
  height: 100%;
  object-fit: cover; }

.news-list-item__desc-wrap {
  padding: 25px;
  line-height: 23px; }
  @media (min-width: 611px) {
    .news-list-item__desc-wrap {
      width: 61.50713%;
      float: right;
      margin-right: 0; } }
  @media (min-width: 0) and (max-width: 640px) {
    .news-list-item__desc-wrap {
      width: 100%;
      float: left;
      margin-left: 0;
      margin-right: 0;
      padding: 20px; } }

.news__title {
  font-family: "RobotoRegular", sans-serif;
  font-size: 16px;
  color: #444444;
  -webkit-transition: color 0.3s;
  -moz-transition: color 0.3s;
  -ms-transition: color 0.3s;
  -o-transition: color 0.3s;
  transition: color 0.3s; }

.news-data {
  font-family: "RobotoRegular", sans-serif;
  font-size: 14px;
  color: #AAAAAA; }
  .news-data:before {
    position: relative;
    top: 2px;
    content: '\e906';
    display: inline-block;
    margin-right: 8px;
    font-family: "icomoon";
    font-size: 13px;
    color: #CCCCCC; }

.sidebar-random {
  width: 35.18519%;
  float: right;
  margin-right: 0; }
  @media (min-width: 0) and (max-width: 1023px) {
    .sidebar-random {
      width: 100%;
      float: left;
      margin-left: 0;
      margin-right: 0; } }

@keyframes rotate {
  from {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(-360deg);
    -moz-transform: rotate(-360deg);
    -ms-transform: rotate(-360deg);
    -o-transform: rotate(-360deg);
    transform: rotate(-360deg); } }

.sidebar-random__tile {
  margin-bottom: 18px; }
  @media (min-width: 0) and (max-width: 1023px) {
    .sidebar-random__tile {
      text-align: center; } }

.sidebar-random__film {
  position: relative;
  margin: 0 auto;
  max-width: 337px; }
  .sidebar-random__film img {
    width: 100%;
    height: auto; }
  .sidebar-random__film .sidebar-random__img-wrap > a {
    position: relative;
    display: block;
    z-index: 5; }
    .sidebar-random__film .sidebar-random__img-wrap > a:hover:after {
      -webkit-animation: rotate 1.5s forwards;
      -o-animation: rotate 1.5s forwards;
      animation: rotate 1.5s forwards;
      animation-play-state: running; }
  .sidebar-random__film .sidebar-random__img-wrap a:before {
    content: '';
    position: absolute;
    z-index: 3;
    top: 34.3%;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to bottom, transparent, black); }
  .sidebar-random__film .sidebar-random__img-wrap a:after {
    position: absolute;
    z-index: 7;
    top: calc(50% - 49px);
    left: calc(50% - 44px);
    content: '\e908';
    font-family: 'icomoon';
    font-size: 50px;
    color: #fff;
    display: block;
    width: 98px;
    height: 98px;
    background-color: #104E98;
    text-align: center;
    line-height: 98px;
    vertical-align: middle;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%; }

.sidebar-random__info-wrap {
  position: absolute;
  bottom: 25px;
  left: 25px;
  right: 25px;
  z-index: 5;
  color: #fff; }

.sidebar-random__title, .sidebar-random__genre {
  display: block;
  margin-bottom: 11px;
  font-family: "RobotoRegular", sans-serif;
  font-size: 18px;
  color: #ffffff;
  text-decoration: none; }
  .sidebar-random__title:hover, .sidebar-random__genre:hover {
    text-decoration: underline;
    color: #fff; }

.sidebar-random__wrap-genre {
  color: rgba(225, 225, 225, 0.6); }

.sidebar-random__genre {
  display: inline;
  font-size: 15px;
  color: rgba(225, 225, 225, 0.6); }
  .sidebar-random__genre:hover {
    text-decoration: none;
    color: #fff; }

.sitemap {
  padding: 59px 0;
  background-color: #f3f3f3; }
  @media (min-width: 0) and (max-width: 640px) {
    .sitemap {
      padding: 50px 0; } }
  .sitemap .sup-desc-logo {
    color: rgba(68, 68, 68, 0.7); }
  .sitemap .sub-desc-logo {
    color: #444; }
  .sitemap-item .menu li:not(:last-child) {
    margin-bottom: 21px; }
  @media (min-width: 1024px) {
    .sitemap-item {
      width: 21.60547%;
      float: left;
      margin-right: 4.52605%; }
      .sitemap-item:nth-child(4n) {
        width: 21.60547%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 0) and (max-width: 1023px) {
    .sitemap-item:first-child {
      display: none; } }
  @media (min-width: 641px) and (max-width: 1023px) {
    .sitemap-item {
      width: 29.81595%;
      float: left;
      margin-right: 5.27607%; }
      .sitemap-item:nth-child(3n) {
        width: 29.81595%;
        float: right;
        margin-right: 0; } }
  @media (min-width: 0) and (max-width: 640px) {
    .sitemap-item {
      text-align: center;
      width: 100%;
      float: left;
      margin-left: 0;
      margin-right: 0; }
      .sitemap-item:not(:last-child) {
        margin-bottom: 55px; } }
  .sitemap-item a {
    font-family: "RobotoRegular", sans-serif;
    font-size: 16px;
    text-decoration: none;
    color: #999999;
    -webkit-transition: color 0.3s;
    -moz-transition: color 0.3s;
    -ms-transition: color 0.3s;
    -o-transition: color 0.3s;
    transition: color 0.3s; }
    .sitemap-item a:hover {
      color: #104E98; }
  .sitemap__title {
    margin-bottom: 22px;
    font-family: Roboto, sans-serif;
    font-weight: bold;
    font-size: 18px;
    color: #25212c; }

a.logo {
  display: inline-block;
  max-width: 205px;
  font-size: 0;
  text-decoration: none;
  color: #fff;
  -webkit-transition: all 0.3s;
  -moz-transition: all 0.3s;
  -ms-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }
  a.logo:hover {
    text-decoration: none; }
  a.logo:before {
    content: '\e90b';
    display: inline-block;
    float: left;
    margin-right: 16px;
    font-family: "icomoon";
    font-size: 52px;
    color: #104E98;
    -webkit-transition: all 0.3s;
    -moz-transition: all 0.3s;
    -ms-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s; }
    @media (min-width: 0) and (max-width: 1023px) {
      a.logo:before {
        font-size: 49px; } }

.sup-desc-logo {
  display: inline-block;
  margin-top: 3px;
  font-family: "RobotoRegular", sans-serif;
  font-size: 17px;
  color: rgba(225, 225, 225, 0.7);
  text-transform: lowercase; }
  @media (min-width: 0) and (max-width: 640px) {
    .sup-desc-logo {
      font-size: 14px; } }

.sub-desc-logo {
  position: relative;
  left: -4px;
  display: inline-block;
  font-family: Roboto, sans-serif;
  font-weight: bold;
  font-size: 52px;
  line-height: 32px;
  color: #fff;
  text-transform: lowercase; }
  @media (min-width: 641px) and (max-width: 1023px) {
    .sub-desc-logo {
      font-size: 47px; } }
  @media (min-width: 0) and (max-width: 640px) {
    .sub-desc-logo {
      font-size: 48px;
      line-height: 25px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
